{"version":3,"sources":["components/CloudTag.tsx","components/Cloud.tsx","bookmark.ts","data.ts","bookmark-collection.ts","components/BookmarkComponent.tsx","components/BookmarkCollectionComponent.tsx","App.tsx","serviceWorker.tsx","index.tsx"],"names":["Container","styled","span","_templateObject","UnstyledCloudTag","me","this","react_default","a","createElement","className","props","onClick","label","Component","CloudTag","_templateObject2","relativeCount","size","concat","colors","split","map","c","codePointAt","reduce","acc","n","length","selected","div","Cloud_templateObject","Cloud","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","tagElements","tags","tag","renderTag","Cloud_Container","onTagClicked","Bookmark","url","description","bookmarks","result","window","createBookmarks","args","push","importData","BookmarkCollection","parentCollection","selectedTags","relativeTagFrequencies","computeRelativeTagFrequencies","tagFrequencies","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","bookmark","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","err","return","absoluteFrequencies","computeAbsoluteTagFrequencies","maximumAbsoluteFrequency","Math","max","toConsumableArray","values","relativeFrequency","includes","selectedBookmarks","filter","t","every","get","keys","BookmarkComponent_templateObject","Link","BookmarkComponent_templateObject2","StyledCloud","_templateObject3","LeftContainer","_templateObject4","BookmarkComponent","_this$props$bookmark","tagLabels","tagLabel","BookmarkComponent_Container","href","BookmarkCollectionComponent_templateObject","BookmarkCollectionComponent","bookmarkCollection","sort","x","y","localeCompare","BookmarkCollectionComponent_Container","dist_index_esm","_ref","width","height","index_esm","itemCount","itemSize","renderRow","index","style","BookmarkComponent_BookmarkComponent","App_templateObject","App_templateObject2","App","call","entireCollection","createBookmarkCollection","state","frequencies","availableTags","App_Container","App_StyledCloud","unselectTag","setState","onUnselectTag","onSelectTag","BookmarkCollectionComponent_BookmarkCollectionComponent","selectTag","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20074d04.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport interface IProps\r\n{\r\n    className ?: string;\r\n\r\n    label : string;\r\n\r\n    size : number;\r\n\r\n    selected : boolean;\r\n\r\n    onClick : () => void;\r\n}\r\n\r\nexport interface IState\r\n{\r\n\r\n}\r\n\r\n\r\nconst Container = styled.span`\r\n    padding: 2px 20px;\r\n    margin: 2px 5px;\r\n    user-select: none;\r\n    white-space: nowrap;\r\n    cursor: default;\r\n    font-variant: small-caps;\r\n    font-family: Palatino, \"Palatino Linotype\", \"Palatino LT STD\";\r\n\r\n    &:hover {\r\n        color: white;\r\n        background: black;\r\n    }\r\n`;\r\n\r\nclass UnstyledCloudTag extends Component<IProps, IState>\r\n{\r\n    render() : JSX.Element\r\n    {\r\n        const me = this;\r\n\r\n        return (\r\n            <Container className={this.props.className} onClick={onClick}>\r\n                {this.props.label}\r\n            </Container>\r\n        );\r\n\r\n\r\n        function onClick()\r\n        {\r\n            me.props.onClick();\r\n        }\r\n    }\r\n}\r\n\r\nfunction deriveFontSize(props : IProps)\r\n{\r\n    const { size: relativeCount } = props;\r\n    const minimumSize = 100;\r\n    const maximumSize = 200;\r\n    const size = minimumSize + (maximumSize - minimumSize) * relativeCount;\r\n\r\n    return `${size}%`;\r\n}\r\n\r\nfunction deriveBackground(props : IProps)\r\n{\r\n    const { label } = props;\r\n    const hash = label.split('').map(c => c.codePointAt(0)).reduce<number>( (acc, n) => acc + (n as number), 0 );\r\n    const colors = [\r\n        '#FAA',\r\n        '#AFA',\r\n        '#AAF',\r\n        '#DD0',\r\n        '#FAF',\r\n        '#AFF',\r\n        '#84A',\r\n        '#48A',\r\n        '#484',\r\n        '#A48',\r\n        '#A84',\r\n        '#8A4',\r\n        '#4A8',\r\n        '#A55',\r\n        '#5A5',\r\n        '#77A',\r\n    ];\r\n\r\n    return colors[hash % colors.length];\r\n}\r\n\r\nfunction deriveBoxShadow(props : IProps)\r\n{\r\n    if ( props.selected )\r\n    {\r\n        return '5px 5px black';\r\n    }\r\n    else\r\n    {\r\n        return '2px 2px black';\r\n    }\r\n}\r\n\r\nfunction deriveFontWeight(props : IProps)\r\n{\r\n    if ( props.selected )\r\n    {\r\n        return 'bold';\r\n    }\r\n    else\r\n    {\r\n        return 'normal';\r\n    }\r\n}\r\n\r\nexport const CloudTag = styled(UnstyledCloudTag)`\r\n    font-size: ${deriveFontSize};\r\n    background: ${deriveBackground};\r\n    box-shadow: ${deriveBoxShadow};\r\n    font-weight: ${deriveFontWeight};\r\n`;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { CloudTag } from './CloudTag';\r\n\r\n\r\nexport interface ITag\r\n{\r\n    label : string;\r\n\r\n    size : number;\r\n\r\n    selected : boolean;\r\n}\r\n\r\nexport interface IProps\r\n{\r\n    className ?: string;\r\n\r\n    tags : ITag[];\r\n\r\n    onTagClicked ?: (tag : ITag) => void;\r\n}\r\n\r\nexport interface IState\r\n{\r\n\r\n}\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px;\r\n    margin: 5px;\r\n`;\r\n\r\n\r\nexport class Cloud extends Component<IProps, IState>\r\n{\r\n    render() : JSX.Element\r\n    {\r\n        const tags = this.props.tags;\r\n        const tagElements = tags.map(tag => this.renderTag(tag));\r\n\r\n        return (\r\n            <Container className={this.props.className}>\r\n                {tagElements}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    private renderTag(tag : ITag) : JSX.Element\r\n    {\r\n        const me = this;\r\n\r\n        return (\r\n            <CloudTag key={tag.label} label={tag.label} size={tag.size} selected={tag.selected} onClick={onClick} />\r\n        );\r\n\r\n\r\n        function onClick()\r\n        {\r\n            if ( me.props.onTagClicked )\r\n            {\r\n                me.props.onTagClicked(tag);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","export class Bookmark\r\n{\r\n    public constructor(readonly label : string, readonly url : string, readonly tags : string[], public description ?: string)\r\n    {\r\n        // NOP\r\n    }\r\n}","import { Bookmark } from './bookmark';\r\n\r\n\r\n\r\nfunction importData(): Bookmark[]\r\n{\r\n    const result: Bookmark[] = [];\r\n\r\n    (window as any).createBookmarks(addBookmark);\r\n\r\n    return result;\r\n\r\n\r\n    function addBookmark(args: { label: string, url: string, tags: string[], description?: string })\r\n    {\r\n        result.push(new Bookmark(args.label, args.url, args.tags, args.description));\r\n    }\r\n}\r\n\r\n\r\nexport const bookmarks = importData();","import { Bookmark } from './bookmark';\r\nimport { bookmarks } from './data';\r\n\r\n\r\nexport class BookmarkCollection\r\n{\r\n    private readonly parentCollection : BookmarkCollection;\r\n\r\n    public readonly relativeTagFrequencies : { [key : string] : number };\r\n\r\n    public static createBookmarkCollection() : BookmarkCollection\r\n    {\r\n        return new BookmarkCollection(null, bookmarks, []);\r\n    }\r\n\r\n    private constructor(parentCollection : BookmarkCollection | null, public bookmarks : Bookmark[], public selectedTags : string[])\r\n    {\r\n        this.parentCollection = parentCollection || this;\r\n        this.relativeTagFrequencies = this.computeRelativeTagFrequencies();\r\n    }\r\n\r\n    public get availableTags()\r\n    {\r\n        return Object.keys(this.relativeTagFrequencies).filter(tag => !this.selectedTags.includes(tag));\r\n    }\r\n\r\n    public computeAbsoluteTagFrequencies() : { [key : string] : number }\r\n    {\r\n        const tagFrequencies : { [key : string] : number } = {};\r\n\r\n        for ( const bookmark of this.bookmarks )\r\n        {\r\n            for ( const tag of bookmark.tags )\r\n            {\r\n                if ( !(tag in tagFrequencies) )\r\n                {\r\n                    tagFrequencies[tag] = 0;\r\n                }\r\n\r\n                tagFrequencies[tag]++;\r\n            }\r\n        }\r\n\r\n        return tagFrequencies;\r\n    }\r\n\r\n    public computeRelativeTagFrequencies() : { [key : string] : number }\r\n    {\r\n        const absoluteFrequencies = this.computeAbsoluteTagFrequencies();\r\n        const maximumAbsoluteFrequency = Math.max(...Object.values(absoluteFrequencies));\r\n        const result : { [key : string] : number } = {};\r\n\r\n        for ( const tag in absoluteFrequencies )\r\n        {\r\n            const absoluteFrequency = absoluteFrequencies[tag];\r\n            const relativeFrequency = absoluteFrequency / maximumAbsoluteFrequency;\r\n\r\n            result[tag] = relativeFrequency;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public selectTag(tag : string) : BookmarkCollection\r\n    {\r\n        if ( this.selectedTags.includes(tag) )\r\n        {\r\n            return this;\r\n        }\r\n        else\r\n        {\r\n            const selectedBookmarks = this.bookmarks.filter( bookmark => bookmark.tags.includes(tag) );\r\n\r\n            return new BookmarkCollection(this.parentCollection, selectedBookmarks, [ ...this.selectedTags, tag]);\r\n        }\r\n    }\r\n\r\n    public unselectTag(tag : string) : BookmarkCollection\r\n    {\r\n        const selectedTags = this.selectedTags.filter( t => t != tag );\r\n        const selectedBookmarks = this.parentCollection.bookmarks.filter(bookmark => selectedTags.every(tag => bookmark.tags.includes(tag)));\r\n\r\n        return new BookmarkCollection(this.parentCollection, selectedBookmarks, selectedTags);\r\n    }\r\n\r\n    public unselectAll() : BookmarkCollection\r\n    {\r\n        return this.parentCollection;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Bookmark } from '../bookmark';\r\nimport { Cloud, ITag } from './Cloud';\r\n\r\n\r\nexport interface IProps\r\n{\r\n    className ?: string;\r\n\r\n    bookmark : Bookmark;\r\n\r\n    onTagClicked ?: (tag : ITag) => void;\r\n}\r\n\r\nexport interface IState\r\n{\r\n\r\n}\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 80%;\r\n    align-items: center;\r\n    margin: 5px 20px;\r\n    user-select: none;\r\n    cursor: default;\r\n    font-variant: small-caps;\r\n    font-weight: bold;\r\n    font-family: Palatino, \"Palatino Linotype\", \"Palatino LT STD\";\r\n    box-shadow: 2px 2px black;\r\n    background: #DDD;\r\n`;\r\n\r\nconst Link = styled.a`\r\n    text-align: left;\r\n    text-decoration: none;\r\n    display: block;\r\n    width: 100%;\r\n    font-size: 120%;\r\n`;\r\n\r\nconst StyledCloud = styled(Cloud)`\r\n\r\n`;\r\n\r\nconst LeftContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 70%;\r\n    margin: 5px;\r\n`;\r\n\r\nexport class BookmarkComponent extends Component<IProps, IState>\r\n{\r\n    render() : JSX.Element\r\n    {\r\n        const { url, label, tags: tagLabels, description } = this.props.bookmark;\r\n        const tags : ITag[] = tagLabels.map( tagLabel => ({ label: tagLabel, selected : false, size: 0 }));\r\n\r\n        return (\r\n            <Container className={this.props.className}>\r\n                <LeftContainer>\r\n                    <Link href={url}>{label}</Link>\r\n                    {description}\r\n                </LeftContainer>\r\n                <StyledCloud tags={tags} onTagClicked={this.props.onTagClicked} />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { Component, CSSProperties } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BookmarkCollection } from '../bookmark-collection';\r\nimport { Bookmark } from '../bookmark';\r\nimport { BookmarkComponent } from './BookmarkComponent';\r\nimport { ITag } from './Cloud';\r\nimport { FixedSizeList } from 'react-window';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\n\r\n\r\nexport interface IProps\r\n{\r\n    className ?: string;\r\n\r\n    bookmarkCollection : BookmarkCollection;\r\n\r\n    onTagClicked ?: (tag : ITag) => void;\r\n}\r\n\r\nexport interface IState\r\n{\r\n\r\n}\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    height: 100%;\r\n`;\r\n\r\nexport class BookmarkCollectionComponent extends Component<IProps, IState>\r\n{\r\n    render() : JSX.Element\r\n    {\r\n        const me = this;\r\n        const bookmarks = [ ...this.props.bookmarkCollection.bookmarks ].sort((x, y) => x.label.localeCompare(y.label));\r\n\r\n        return (\r\n            <Container>\r\n                <AutoSizer>\r\n                    {\r\n                        ({width, height}) => {\r\n                            return (\r\n                                <FixedSizeList className={this.props.className} width={width} height={height} itemCount={bookmarks.length} itemSize={70}>\r\n                                    {renderRow}\r\n                                </FixedSizeList>\r\n                            );\r\n                        }\r\n                    }\r\n                </AutoSizer>\r\n            </Container>\r\n        );\r\n\r\n\r\n        function renderRow(args : {index : number, style : CSSProperties}) : JSX.Element\r\n        {\r\n            const bookmark = bookmarks[args.index];\r\n\r\n            return (\r\n                <div style={args.style}>\r\n                    <BookmarkComponent bookmark={bookmark} onTagClicked={me.props.onTagClicked} />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { Cloud, ITag } from './components/Cloud';\nimport { BookmarkCollection } from './bookmark-collection';\nimport styled from 'styled-components';\nimport { BookmarkCollectionComponent } from './components/BookmarkCollectionComponent';\nimport './App.css';\n\n\ninterface IProps\n{\n\n}\n\ninterface IState\n{\n    bookmarks : BookmarkCollection;\n}\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`;\n\nconst StyledCloud = styled(Cloud)`\n    flex-wrap: wrap;\n    flex-grow: 0;\n`;\n\nclass App extends Component<IProps, IState>\n{\n    constructor(props : IProps)\n    {\n        super(props);\n\n        const entireCollection = BookmarkCollection.createBookmarkCollection();\n\n        this.state = {\n            bookmarks: entireCollection,\n        };\n    }\n\n    render()\n    {\n        const me = this;\n        const frequencies = this.state.bookmarks.relativeTagFrequencies;\n        const selectedTags = this.state.bookmarks.selectedTags.map( tag => ({ label: tag, size: frequencies[tag], selected: true }) );\n        const availableTags = this.state.bookmarks.availableTags.map( tag => ({ label: tag, size: frequencies[tag], selected: false }) );\n        const tags : ITag[] = [ ...selectedTags, ...availableTags ].sort( (x, y) => x.label.localeCompare(y.label) );\n\n        return (\n            <Container>\n                <StyledCloud tags={tags} onTagClicked={onToggleTag} />\n                <BookmarkCollectionComponent bookmarkCollection={this.state.bookmarks} onTagClicked={tag => onSelectTag(tag.label)} />\n            </Container>\n        );\n\n\n        function onToggleTag(tag : ITag)\n        {\n            if ( tag.selected )\n            {\n                onUnselectTag(tag.label);\n            }\n            else\n            {\n                onSelectTag(tag.label);\n            }\n        }\n\n        function onSelectTag(tag : string)\n        {\n            const bookmarks = me.state.bookmarks.selectTag(tag);\n\n            me.setState( { bookmarks } );\n        }\n\n        function onUnselectTag(tag : string)\n        {\n            const bookmarks = me.state.bookmarks.unselectTag(tag);\n\n            me.setState( { bookmarks } );\n        }\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}